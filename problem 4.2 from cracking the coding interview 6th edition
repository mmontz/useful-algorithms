//problem 4.2 from cracking the code interview 6th edition: given a sorted (increasing order) 
//array with unique integer elements, write an algorithm to create a binary search tree with minimal height.

class Node {
public:
    Node* left;
    Node* right;
    int val;
    Node (int x){val = x; left = NULL; right = NULL;}
};

class solution {
public:
    Node* MinimalTree (vector <int>& arr , int s , int e){
        if (s>e)
            return NULL;
        int mid = s+(e-s)/2;
        Node* root = new Node(arr[mid]);
        root->left = MinimalTree(arr, s, mid-1);
        root->right = MinimalTree (arr, mid+1 , e);
        return root;
    }
    
    Node* CreateMinimalTree (vector <int> & arr){
        return MinimalTree(arr, 0, arr.size()-1);
    }
};
